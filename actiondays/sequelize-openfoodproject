#!/usr/bin/env python

import pandas as pd
from multiprocessing import Pool

from typing import Optional
from typing import List
from sqlalchemy import ForeignKey
from sqlalchemy import String, Double
from sqlalchemy.orm import DeclarativeBase
from sqlalchemy.orm import mapped_column
from sqlalchemy.orm import Session
from sqlalchemy.orm import Mapped
from sqlalchemy import create_engine

class Base(DeclarativeBase):
    pass

class Product(Base):
    __tablename__ = 'products'
    id: Mapped[int] = mapped_column(primary_key=True)

    code: Mapped[str] = mapped_column(String(), nullable=True)
    url: Mapped[str] = mapped_column(String(), nullable=True)
    creator: Mapped[str] = mapped_column(String(), nullable=True)
    created_t: Mapped[str] = mapped_column(String(), nullable=True)
    created_datetime: Mapped[str] = mapped_column(String(), nullable=True)
    last_modified_t: Mapped[str] = mapped_column(String(), nullable=True)
    last_modified_datetime: Mapped[str] = mapped_column(String(), nullable=True)
    last_modified_by: Mapped[str] = mapped_column(String(), nullable=True)
    last_updated_t: Mapped[str] = mapped_column(String(), nullable=True)
    last_updated_datetime: Mapped[str] = mapped_column(String(), nullable=True)
    product_name: Mapped[str] = mapped_column(String(), nullable=True)
    abbreviated_product_name: Mapped[str] = mapped_column(String(), nullable=True)
    generic_name: Mapped[str] = mapped_column(String(), nullable=True)
    quantity: Mapped[str] = mapped_column(String(), nullable=True)
    packaging: Mapped[str] = mapped_column(String(), nullable=True)
    packaging_tags: Mapped[str] = mapped_column(String(), nullable=True)
    packaging_en: Mapped[str] = mapped_column(String(), nullable=True)
    packaging_text: Mapped[str] = mapped_column(String(), nullable=True)
    brands: Mapped[str] = mapped_column(String(), nullable=True)
    brands_tags: Mapped[str] = mapped_column(String(), nullable=True)
    brands_en: Mapped[str] = mapped_column(String(), nullable=True)
    categories: Mapped[str] = mapped_column(String(), nullable=True)
    categories_tags: Mapped[str] = mapped_column(String(), nullable=True)
    categories_en: Mapped[str] = mapped_column(String(), nullable=True)
    origins: Mapped[str] = mapped_column(String(), nullable=True)
    origins_tags: Mapped[str] = mapped_column(String(), nullable=True)
    origins_en: Mapped[str] = mapped_column(String(), nullable=True)
    manufacturing_places: Mapped[str] = mapped_column(String(), nullable=True)
    manufacturing_places_tags: Mapped[str] = mapped_column(String(), nullable=True)
    labels: Mapped[str] = mapped_column(String(), nullable=True)
    labels_tags: Mapped[str] = mapped_column(String(), nullable=True)
    labels_en: Mapped[str] = mapped_column(String(), nullable=True)
    emb_codes: Mapped[str] = mapped_column(String(), nullable=True)
    emb_codes_tags: Mapped[str] = mapped_column(String(), nullable=True)
    first_packaging_code_geo: Mapped[str] = mapped_column(String(), nullable=True)
    cities: Mapped[str] = mapped_column(String(), nullable=True)
    cities_tags: Mapped[str] = mapped_column(String(), nullable=True)
    purchase_places: Mapped[str] = mapped_column(String(), nullable=True)
    stores: Mapped[str] = mapped_column(String(), nullable=True)
    countries: Mapped[str] = mapped_column(String(), nullable=True)
    countries_tags: Mapped[str] = mapped_column(String(), nullable=True)
    countries_en: Mapped[str] = mapped_column(String(), nullable=True)
    ingredients_text: Mapped[str] = mapped_column(String(), nullable=True)
    ingredients_tags: Mapped[str] = mapped_column(String(), nullable=True)
    ingredients_analysis_tags: Mapped[str] = mapped_column(String(), nullable=True)
    allergens: Mapped[str] = mapped_column(String(), nullable=True)
    allergens_en: Mapped[str] = mapped_column(String(), nullable=True)
    traces: Mapped[str] = mapped_column(String(), nullable=True)
    traces_tags: Mapped[str] = mapped_column(String(), nullable=True)
    traces_en: Mapped[str] = mapped_column(String(), nullable=True)
    serving_size: Mapped[str] = mapped_column(String(), nullable=True)
    serving_quantity: Mapped[str] = mapped_column(String(), nullable=True)
    no_nutrition_data: Mapped[str] = mapped_column(String(), nullable=True)
    additives_n: Mapped[str] = mapped_column(String(), nullable=True)
    additives: Mapped[str] = mapped_column(String(), nullable=True)
    additives_tags: Mapped[str] = mapped_column(String(), nullable=True)
    additives_en: Mapped[str] = mapped_column(String(), nullable=True)
    nutriscore_score: Mapped[str] = mapped_column(String(), nullable=True)
    nutriscore_grade: Mapped[str] = mapped_column(String(), nullable=True)
    nova_group: Mapped[str] = mapped_column(String(), nullable=True)
    pnns_groups_1: Mapped[str] = mapped_column(String(), nullable=True)
    pnns_groups_2: Mapped[str] = mapped_column(String(), nullable=True)
    food_groups: Mapped[str] = mapped_column(String(), nullable=True)
    food_groups_tags: Mapped[str] = mapped_column(String(), nullable=True)
    food_groups_en: Mapped[str] = mapped_column(String(), nullable=True)
    states: Mapped[str] = mapped_column(String(), nullable=True)
    states_tags: Mapped[str] = mapped_column(String(), nullable=True)
    states_en: Mapped[str] = mapped_column(String(), nullable=True)
    brand_owner: Mapped[str] = mapped_column(String(), nullable=True)
    environmental_score_score: Mapped[str] = mapped_column(String(), nullable=True)
    environmental_score_grade: Mapped[str] = mapped_column(String(), nullable=True)
    nutrient_levels_tags: Mapped[str] = mapped_column(String(), nullable=True)
    product_quantity: Mapped[str] = mapped_column(String(), nullable=True)
    owner: Mapped[str] = mapped_column(String(), nullable=True)
    data_quality_errors_tags: Mapped[str] = mapped_column(String(), nullable=True)
    unique_scans_n: Mapped[str] = mapped_column(String(), nullable=True)
    popularity_tags: Mapped[str] = mapped_column(String(), nullable=True)
    completeness: Mapped[str] = mapped_column(String(), nullable=True)
    last_image_t: Mapped[str] = mapped_column(String(), nullable=True)
    last_image_datetime: Mapped[str] = mapped_column(String(), nullable=True)
    main_category: Mapped[str] = mapped_column(String(), nullable=True)
    main_category_en: Mapped[str] = mapped_column(String(), nullable=True)
    image_url: Mapped[str] = mapped_column(String(), nullable=True)
    image_small_url: Mapped[str] = mapped_column(String(), nullable=True)
    image_ingredients_url: Mapped[str] = mapped_column(String(), nullable=True)
    image_ingredients_small_url: Mapped[str] = mapped_column(String(), nullable=True)
    image_nutrition_url: Mapped[str] = mapped_column(String(), nullable=True)
    image_nutrition_small_url: Mapped[str] = mapped_column(String(), nullable=True)
    energy_kj_100g: Mapped[str] = mapped_column(Double(), nullable=True)
    energy_kcal_100g: Mapped[str] = mapped_column(Double(), nullable=True)
    energy_100g: Mapped[str] = mapped_column(Double(), nullable=True)
    energy_from_fat_100g: Mapped[str] = mapped_column(Double(), nullable=True)
    fat_100g: Mapped[str] = mapped_column(Double(), nullable=True)
    saturated_fat_100g: Mapped[str] = mapped_column(Double(), nullable=True)
    butyric_acid_100g: Mapped[str] = mapped_column(Double(), nullable=True)
    caproic_acid_100g: Mapped[str] = mapped_column(Double(), nullable=True)
    caprylic_acid_100g: Mapped[str] = mapped_column(Double(), nullable=True)
    capric_acid_100g: Mapped[str] = mapped_column(Double(), nullable=True)
    lauric_acid_100g: Mapped[str] = mapped_column(Double(), nullable=True)
    myristic_acid_100g: Mapped[str] = mapped_column(Double(), nullable=True)
    palmitic_acid_100g: Mapped[str] = mapped_column(Double(), nullable=True)
    stearic_acid_100g: Mapped[str] = mapped_column(Double(), nullable=True)
    arachidic_acid_100g: Mapped[str] = mapped_column(Double(), nullable=True)
    behenic_acid_100g: Mapped[str] = mapped_column(Double(), nullable=True)
    lignoceric_acid_100g: Mapped[str] = mapped_column(Double(), nullable=True)
    cerotic_acid_100g: Mapped[str] = mapped_column(Double(), nullable=True)
    montanic_acid_100g: Mapped[str] = mapped_column(Double(), nullable=True)
    melissic_acid_100g: Mapped[str] = mapped_column(Double(), nullable=True)
    unsaturated_fat_100g: Mapped[str] = mapped_column(Double(), nullable=True)
    monounsaturated_fat_100g: Mapped[str] = mapped_column(Double(), nullable=True)
    omega_9_fat_100g: Mapped[str] = mapped_column(Double(), nullable=True)
    polyunsaturated_fat_100g: Mapped[str] = mapped_column(Double(), nullable=True)
    omega_3_fat_100g: Mapped[str] = mapped_column(Double(), nullable=True)
    omega_6_fat_100g: Mapped[str] = mapped_column(Double(), nullable=True)
    alpha_linolenic_acid_100g: Mapped[str] = mapped_column(Double(), nullable=True)
    eicosapentaenoic_acid_100g: Mapped[str] = mapped_column(Double(), nullable=True)
    docosahexaenoic_acid_100g: Mapped[str] = mapped_column(Double(), nullable=True)
    linoleic_acid_100g: Mapped[str] = mapped_column(Double(), nullable=True)
    arachidonic_acid_100g: Mapped[str] = mapped_column(Double(), nullable=True)
    gamma_linolenic_acid_100g: Mapped[str] = mapped_column(Double(), nullable=True)
    dihomo_gamma_linolenic_acid_100g: Mapped[str] = mapped_column(Double(), nullable=True)
    oleic_acid_100g: Mapped[str] = mapped_column(Double(), nullable=True)
    elaidic_acid_100g: Mapped[str] = mapped_column(Double(), nullable=True)
    gondoic_acid_100g: Mapped[str] = mapped_column(Double(), nullable=True)
    mead_acid_100g: Mapped[str] = mapped_column(Double(), nullable=True)
    erucic_acid_100g: Mapped[str] = mapped_column(Double(), nullable=True)
    nervonic_acid_100g: Mapped[str] = mapped_column(Double(), nullable=True)
    trans_fat_100g: Mapped[str] = mapped_column(Double(), nullable=True)
    cholesterol_100g: Mapped[str] = mapped_column(Double(), nullable=True)
    carbohydrates_100g: Mapped[str] = mapped_column(Double(), nullable=True)
    sugars_100g: Mapped[str] = mapped_column(Double(), nullable=True)
    added_sugars_100g: Mapped[str] = mapped_column(Double(), nullable=True)
    sucrose_100g: Mapped[str] = mapped_column(Double(), nullable=True)
    glucose_100g: Mapped[str] = mapped_column(Double(), nullable=True)
    fructose_100g: Mapped[str] = mapped_column(Double(), nullable=True)
    galactose_100g: Mapped[str] = mapped_column(Double(), nullable=True)
    lactose_100g: Mapped[str] = mapped_column(Double(), nullable=True)
    maltose_100g: Mapped[str] = mapped_column(Double(), nullable=True)
    maltodextrins_100g: Mapped[str] = mapped_column(Double(), nullable=True)
    starch_100g: Mapped[str] = mapped_column(Double(), nullable=True)
    polyols_100g: Mapped[str] = mapped_column(Double(), nullable=True)
    erythritol_100g: Mapped[str] = mapped_column(Double(), nullable=True)
    fiber_100g: Mapped[str] = mapped_column(Double(), nullable=True)
    soluble_fiber_100g: Mapped[str] = mapped_column(Double(), nullable=True)
    insoluble_fiber_100g: Mapped[str] = mapped_column(Double(), nullable=True)
    proteins_100g: Mapped[str] = mapped_column(Double(), nullable=True)
    casein_100g: Mapped[str] = mapped_column(Double(), nullable=True)
    serum_proteins_100g: Mapped[str] = mapped_column(Double(), nullable=True)
    nucleotides_100g: Mapped[str] = mapped_column(Double(), nullable=True)
    salt_100g: Mapped[str] = mapped_column(Double(), nullable=True)
    added_salt_100g: Mapped[str] = mapped_column(Double(), nullable=True)
    sodium_100g: Mapped[str] = mapped_column(Double(), nullable=True)
    alcohol_100g: Mapped[str] = mapped_column(Double(), nullable=True)
    vitamin_a_100g: Mapped[str] = mapped_column(Double(), nullable=True)
    beta_carotene_100g: Mapped[str] = mapped_column(Double(), nullable=True)
    vitamin_d_100g: Mapped[str] = mapped_column(Double(), nullable=True)
    vitamin_e_100g: Mapped[str] = mapped_column(Double(), nullable=True)
    vitamin_k_100g: Mapped[str] = mapped_column(Double(), nullable=True)
    vitamin_c_100g: Mapped[str] = mapped_column(Double(), nullable=True)
    vitamin_b1_100g: Mapped[str] = mapped_column(Double(), nullable=True)
    vitamin_b2_100g: Mapped[str] = mapped_column(Double(), nullable=True)
    vitamin_pp_100g: Mapped[str] = mapped_column(Double(), nullable=True)
    vitamin_b6_100g: Mapped[str] = mapped_column(Double(), nullable=True)
    vitamin_b9_100g: Mapped[str] = mapped_column(Double(), nullable=True)
    folates_100g: Mapped[str] = mapped_column(Double(), nullable=True)
    vitamin_b12_100g: Mapped[str] = mapped_column(Double(), nullable=True)
    biotin_100g: Mapped[str] = mapped_column(Double(), nullable=True)
    pantothenic_acid_100g: Mapped[str] = mapped_column(Double(), nullable=True)
    silica_100g: Mapped[str] = mapped_column(Double(), nullable=True)
    bicarbonate_100g: Mapped[str] = mapped_column(Double(), nullable=True)
    potassium_100g: Mapped[str] = mapped_column(Double(), nullable=True)
    chloride_100g: Mapped[str] = mapped_column(Double(), nullable=True)
    calcium_100g: Mapped[str] = mapped_column(Double(), nullable=True)
    phosphorus_100g: Mapped[str] = mapped_column(Double(), nullable=True)
    iron_100g: Mapped[str] = mapped_column(Double(), nullable=True)
    magnesium_100g: Mapped[str] = mapped_column(Double(), nullable=True)
    zinc_100g: Mapped[str] = mapped_column(Double(), nullable=True)
    copper_100g: Mapped[str] = mapped_column(Double(), nullable=True)
    manganese_100g: Mapped[str] = mapped_column(Double(), nullable=True)
    fluoride_100g: Mapped[str] = mapped_column(Double(), nullable=True)
    selenium_100g: Mapped[str] = mapped_column(Double(), nullable=True)
    chromium_100g: Mapped[str] = mapped_column(Double(), nullable=True)
    molybdenum_100g: Mapped[str] = mapped_column(Double(), nullable=True)
    iodine_100g: Mapped[str] = mapped_column(Double(), nullable=True)
    caffeine_100g: Mapped[str] = mapped_column(Double(), nullable=True)
    taurine_100g: Mapped[str] = mapped_column(Double(), nullable=True)
    methylsulfonylmethane_100g: Mapped[str] = mapped_column(Double(), nullable=True)
    ph_100g: Mapped[str] = mapped_column(Double(), nullable=True)
    fruits_vegetables_nuts_100g: Mapped[str] = mapped_column(Double(), nullable=True)
    fruits_vegetables_nuts_dried_100g: Mapped[str] = mapped_column(Double(), nullable=True)
    fruits_vegetables_nuts_estimate_100g: Mapped[str] = mapped_column(Double(), nullable=True)
    fruits_vegetables_nuts_estimate_from_ingredients_100g: Mapped[str] = mapped_column(Double(), nullable=True)
    collagen_meat_protein_ratio_100g: Mapped[str] = mapped_column(Double(), nullable=True)
    cocoa_100g: Mapped[str] = mapped_column(Double(), nullable=True)
    chlorophyl_100g: Mapped[str] = mapped_column(Double(), nullable=True)
    carbon_footprint_100g: Mapped[str] = mapped_column(Double(), nullable=True)
    carbon_footprint_from_meat_or_fish_100g: Mapped[str] = mapped_column(Double(), nullable=True)
    nutrition_score_fr_100g: Mapped[str] = mapped_column(Double(), nullable=True)
    nutrition_score_uk_100g: Mapped[str] = mapped_column(Double(), nullable=True)
    glycemic_index_100g: Mapped[str] = mapped_column(Double(), nullable=True)
    water_hardness_100g: Mapped[str] = mapped_column(Double(), nullable=True)
    choline_100g: Mapped[str] = mapped_column(Double(), nullable=True)
    phylloquinone_100g: Mapped[str] = mapped_column(Double(), nullable=True)
    beta_glucan_100g: Mapped[str] = mapped_column(Double(), nullable=True)
    inositol_100g: Mapped[str] = mapped_column(Double(), nullable=True)
    carnitine_100g: Mapped[str] = mapped_column(Double(), nullable=True)
    sulphate_100g: Mapped[str] = mapped_column(Double(), nullable=True)
    nitrate_100g: Mapped[str] = mapped_column(Double(), nullable=True)
    acidity_100g: Mapped[str] = mapped_column(Double(), nullable=True)
    carbohydrates_total_100g: Mapped[str] = mapped_column(Double(), nullable=True)

engine = create_engine("sqlite:////home/michael/fine-arts++/nomplan/datasets/sqlite.db")
Base.metadata.create_all(engine)

def save_chunk(products: pd.DataFrame):
    print('processing chunk:')
    print(products)

    columns = { c : c.replace('-', '_') for c in products.columns}
    products = products.rename(columns=columns)
    products = map(lambda x: Product(**x[1].to_dict()), products.iterrows())
    print('records created')

    with Session(engine) as session:    
        session.add_all(products)
        session.commit()

    print('processed chunk')

input_file = '/home/michael/fine-arts++/nomplan/datasets/en.openfoodfacts.org.products.csv'

with Pool(4) as p:
    for chunk in pd.read_csv(input_file, sep='\t', on_bad_lines='warn', chunksize=2**16, low_memory=False):
        p.apply(save_chunk, args=(chunk,))
